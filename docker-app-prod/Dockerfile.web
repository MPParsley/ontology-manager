# Stage 0, "build-stage", based on Node.js, to build and compile the frontend
FROM node:12-stretch as build-stage
RUN npm install --global npm@6.9.0

# Create app directory
RUN mkdir -p /usr/src/app
WORKDIR /usr/src/app
ENV NODE_ENV=production

COPY . /usr/src/app/
RUN node -v && npm -v && npm ci --production

# Build app
ENV DEBUG=editor
ENV BUILDING_WITHOUT_PG_ACCESS=yes
RUN npm run build -- --modern=server
ENV BUILDING_WITHOUT_PG_ACCESS=
ENV DEBUG=

# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx
FROM nginx:1.15

COPY --from=build-stage /usr/src/app /usr/src/app
RUN mv /usr/src/app/.nuxt /usr/src/app/nuxt_original

ENV NODE_PATH=/usr/local/include/node:/usr/local/lib/node_modules:/usr/share/javascript

COPY --from=build-stage /usr/share/javascript /usr/share/javascript
COPY --from=build-stage /usr/local/include/node /usr/local/include/node
COPY --from=build-stage /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=build-stage /usr/local/bin/node /usr/local/bin/node

RUN ln -s /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm

WORKDIR /usr/src/app

RUN cp ./docker-app-prod/nginx.conf /etc/nginx/nginx.conf
RUN cp ./docker-app-prod/editor.conf /etc/nginx/conf.d/editor.conf
RUN rm /etc/nginx/conf.d/default.conf

# pm2 log management
RUN /usr/src/app/node_modules/.bin/pm2 install pm2-logrotate && \
    /usr/src/app/node_modules/.bin/pm2 set pm2-logrotate:compress true && \
    /usr/src/app/node_modules/.bin/pm2 set pm2-logrotate:rotateInterval '0 */5 * * *'

ENV NODE_ENV=production
ENV HOST 0.0.0.0
EXPOSE 8000 3000

# entrypoint
RUN cp /usr/src/app/docker-app-prod/entrypoint.web.sh /usr/src/app/entrypoint.web.sh
RUN chmod 755 /usr/src/app/entrypoint.web.sh

HEALTHCHECK --interval=10s --timeout=20s --start-period=60s --retries=20 CMD node ./healthcheck.js

ENTRYPOINT [ "/usr/src/app/entrypoint.web.sh"]
